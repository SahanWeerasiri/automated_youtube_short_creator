class Player {
  final String id;
  final String name;
  final int coins;
  final int gems;
  final int highScore;
  final String selectedCharacterId;
  final List<String> unlockedCharacterIds;

  Player({
    required this.id,
    required this.name,
    required this.coins,
    required this.gems,
    required this.highScore,
    required this.selectedCharacterId,
    required this.unlockedCharacterIds,
  });

  Player copyWith({
    String? id,
    String? name,
    int? coins,
    int? gems,
    int? highScore,
    String? selectedCharacterId,
    List<String>? unlockedCharacterIds,
  }) {
    return Player(
      id: id ?? this.id,
      name: name ?? this.name,
      coins: coins ?? this.coins,
      gems: gems ?? this.gems,
      highScore: highScore ?? this.highScore,
      selectedCharacterId: selectedCharacterId ?? this.selectedCharacterId,
      unlockedCharacterIds: unlockedCharacterIds ?? this.unlockedCharacterIds,
    );
  }

  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'name': name,
      'coins': coins,
      'gems': gems,
      'highScore': highScore,
      'selectedCharacterId': selectedCharacterId,
      'unlockedCharacterIds': unlockedCharacterIds,
    };
  }

  factory Player.fromMap(Map<String, dynamic> map) {
    return Player(
      id: map['id'] ?? '',
      name: map['name'] ?? 'Player',
      coins: map['coins'] ?? 0,
      gems: map['gems'] ?? 0,
      highScore: map['highScore'] ?? 0,
      selectedCharacterId: map['selectedCharacterId'] ?? 'default',
      unlockedCharacterIds: List<String>.from(map['unlockedCharacterIds'] ?? ['default']),
    );
  }
}
